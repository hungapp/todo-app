{"version":3,"sources":["themes.js","App.js","index.js"],"names":["themes","orangeTheme","createMuiTheme","palette","primary","light","orange","main","dark","contrastText","blueTheme","blue","greenTheme","green","App","useState","JSON","parse","localStorage","getItem","exercises","setExercises","useEffect","setItem","stringify","title","setTitle","theme","setTheme","classes","makeStyles","root","margin","marginTop","padding","maxWidth","form","display","alignItems","justifyContent","center","handleClick","id","lastId","Math","max","map","exercise","ThemeProvider","Paper","className","Typography","variant","align","gutterBottom","FormControl","Select","value","onChange","e","target","MenuItem","onSubmit","preventDefault","TextField","name","label","Button","color","onClick","List","ListItem","key","ListItemText","IconButton","filter","Delete","ReactDOM","render","document","getElementById"],"mappings":"4XAkCeA,EAFA,CAAEC,YA7BGC,YAAe,CACjCC,QAAS,CACPC,QAAS,CACPC,MAAOC,IAAO,KACdC,KAAMD,IAAO,KACbE,KAAM,UACNC,aAAc,YAuBUC,UAlBZR,YAAe,CAC/BC,QAAS,CACPC,QAAS,CACPC,MAAOM,IAAK,KACZJ,KAAMI,IAAK,SAcwBC,WATtBV,YAAe,CAChCC,QAAS,CACPC,QAAS,CACPC,MAAOQ,IAAM,KACbN,KAAMM,IAAM,UCmFHC,EA3FH,WAAM,MAGkBC,mBAASC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,IAH5E,mBAGTC,EAHS,KAGEC,EAHF,KAKhBC,qBAAU,WACRJ,aAAaK,QAAQ,YAAaP,KAAKQ,UAAUJ,MAChD,CAACA,IAPY,MASUL,mBAAS,IATnB,mBASTU,EATS,KASFC,EATE,OAUUX,mBAASf,EAAOC,aAV1B,mBAUT0B,EAVS,KAUFC,EAVE,KAYVC,EAAUC,aAAW,iBAAO,CAChCC,KAAM,CACJC,OAAQ,OACRC,UAAW,OACXC,QAAS,GACTC,SAAU,KAEZC,KAAM,CACJC,QAAS,OACTC,WAAY,WACZC,eAAgB,gBAElBC,OAAQ,CACNH,QAAS,OACTE,eAAgB,mBAdJT,GAkBVW,EAAc,WAClB,IACIC,EADEC,EAASC,KAAKC,IAAIzB,EAAU0B,KAAI,SAAAC,GAAQ,OAAIA,EAASL,OAEzCA,EAAR,MAAVC,EAAuB,EAAWA,EAAS,EAC3CtB,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAAEsB,KAAIjB,YAClCC,EAAS,KAmBX,OACE,kBAACsB,EAAA,EAAD,CAAerB,MAAOA,GACpB,kBAACsB,EAAA,EAAD,CAAOC,UAAWrB,EAAQE,MACxB,kBAACoB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,cAAY,GAApD,aAGA,yBAAKJ,UAAWrB,EAAQW,QACtB,kBAACe,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAO9B,EAAO+B,SAXX,SAAAC,GACnB/B,EAAS+B,EAAEC,OAAOH,SAWR,kBAACI,EAAA,EAAD,CAAUJ,MAAOzD,EAAOC,aAAxB,UACA,kBAAC4D,EAAA,EAAD,CAAUJ,MAAOzD,EAAOU,WAAxB,QACA,kBAACmD,EAAA,EAAD,CAAUJ,MAAOzD,EAAOY,YAAxB,YAIN,0BAAMsC,UAAWrB,EAAQO,KAAM0B,SA3BhB,SAAAH,GACnBA,EAAEI,iBACFtB,MA0BM,kBAACuB,EAAA,EAAD,CAAWC,KAAK,QAAQC,MAAM,WAAWT,MAAOhC,EAAOiC,SAhC1C,SAAAC,GACnBjC,EAASiC,EAAEC,OAAOH,UAgCZ,kBAACU,EAAA,EAAD,CAAQf,QAAQ,YAAYgB,MAAM,UAAUC,QAAS5B,GAArD,WAIF,kBAAC6B,EAAA,EAAD,KACGlD,EAAU0B,KAAI,SAAAC,GAAQ,OACrB,kBAACwB,EAAA,EAAD,CAAUC,IAAKzB,EAASL,IACtB,kBAAC+B,EAAA,EAAD,CAAcrE,QAAS2C,EAAStB,QAChC,kBAACiD,EAAA,EAAD,CAAYN,MAAM,UAAUC,QAAS,kBAhC5B3B,EAgC+CK,EAASL,QA/B3ErB,EAAaD,EAAUuD,QAAO,SAAA5B,GAAQ,OAAIA,EAASL,KAAOA,MADvC,IAAAA,IAiCN,IACD,kBAACkC,EAAA,EAAD,e,MC3FhBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.59b1a704.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport { orange, blue, green } from '@material-ui/core/colors';\n\nconst orangeTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: orange[200], // same as '#FFCC80'\n      main: orange[600], // same as orange[600]\n      dark: '#EF6C00',\n      contrastText: 'black',\n    },\n  },\n});\n\nconst blueTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: blue[200],\n      main: blue[600],\n    },\n  },\n});\n\nconst greenTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: green[200],\n      main: green[600],\n    },\n  },\n});\n\nconst themes = { orangeTheme, blueTheme, greenTheme };\n\nexport default themes;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Typography,\n  TextField,\n  Paper,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n  FormControl,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport themes from './themes';\n\nconst App = () => {\n  // add persistence with useEffect\n\n  const [exercises, setExercises] = useState(JSON.parse(localStorage.getItem('exercises')) || []);\n\n  useEffect(() => {\n    localStorage.setItem('exercises', JSON.stringify(exercises));\n  }, [exercises]);\n\n  const [title, setTitle] = useState('');\n  const [theme, setTheme] = useState(themes.orangeTheme);\n\n  const classes = makeStyles(() => ({\n    root: {\n      margin: 'auto',\n      marginTop: '20vh',\n      padding: 20,\n      maxWidth: 400,\n    },\n    form: {\n      display: 'flex',\n      alignItems: 'baseline',\n      justifyContent: 'space-evenly',\n    },\n    center: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n    },\n  }))();\n\n  const handleClick = () => {\n    const lastId = Math.max(exercises.map(exercise => exercise.id));\n    let id;\n    lastId == null ? (id = 0) : (id = lastId + 1);\n    setExercises([...exercises, { id, title }]);\n    setTitle('');\n  };\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleClick();\n  };\n\n  const handleDelete = id => {\n    setExercises(exercises.filter(exercise => exercise.id !== id));\n  };\n\n  const handleSelect = e => {\n    setTheme(e.target.value);\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className={classes.root}>\n        <Typography variant=\"h2\" align=\"center\" gutterBottom>\n          Exercises\n        </Typography>\n        <div className={classes.center}>\n          <FormControl>\n            <Select value={theme} onChange={handleSelect}>\n              <MenuItem value={themes.orangeTheme}>Orange</MenuItem>\n              <MenuItem value={themes.blueTheme}>Blue</MenuItem>\n              <MenuItem value={themes.greenTheme}>Green</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <TextField name=\"title\" label=\"Exercise\" value={title} onChange={handleChange} />\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\n            CREATE\n          </Button>\n        </form>\n        <List>\n          {exercises.map(exercise => (\n            <ListItem key={exercise.id}>\n              <ListItemText primary={exercise.title} />\n              <IconButton color=\"primary\" onClick={() => handleDelete(exercise.id)}>\n                {' '}\n                <Delete />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\n// import 'typeface-roboto';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}